datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Feeder {
  id         Int    @id @default(autoincrement())
  networkNum Int
  feederNum  Int
  nodes      Node[]
  cases      Case[]
}

model Node {
  id        Int     @id @default(autoincrement())
  feeder    Feeder  @relation(fields: [feederId], references: [id])
  feederId  Int
  num       Int
  posX      Float
  posY      Float
  hasLoad   Boolean
  nextLines Line[]  @relation("PrevNode")
  prevLines Line[]  @relation("NextNode")
}

model Line {
  id         Int    @id @default(autoincrement())
  prevNode   Node   @relation("PrevNode", fields: [prevNodeId], references: [id])
  prevNodeId Int
  nextNode   Node   @relation("NextNode", fields: [nextNodeId], references: [id])
  nextNodeId Int
  lengthM    Float
  phase      Int
  code       String
  rOhmPerKm  Float
  xOhmPerKm  Float
  flows      Flow[]
}

model Sample {
  id     Int    @id @default(autoincrement())
  num    Int
  hour   Int
  minute Int
  val    Float
  season String
  type   String
}

model Case {
  id        Int    @id @default(autoincrement())
  feeder    Feeder @relation(fields: [feederId], references: [id])
  feederId  Int
  hour      Int
  minute    Int
  pvCount   Int
  pvScale   Float
  loadScale Float
  baseV     Float
  seed      Int
  status    String
  flows     Flow[]
}

model Flow {
  id        Int     @id @default(autoincrement())
  case      Case    @relation(fields: [caseId], references: [id])
  caseId    Int
  line      Line    @relation(fields: [lineId], references: [id])
  lineId    Int
  nextNodeP Float
  nextNodeV Float
  lineI     Float
  before    Boolean
}
